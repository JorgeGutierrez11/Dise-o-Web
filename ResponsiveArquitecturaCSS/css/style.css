[class^="box"]{/* (Selecto de atributos) Aplica los estilos a los elemntos que en su nombre este la palablra "box" */
    margin: 3rem auto;
    background-color: orangered;
}

.box{
    width: 300px;
    height: 300px;
}

.box-flexible{ /* Uso de unidades relativas para las cajas responsiv */
    width: 50%;
    height: 20vh;
}

.box-flexible-2{
    max-width: 960PX;
    min-width: 280px;
    max-height: 480px;
    min-height: 280px;
}

.box-flexible-3{
    max-width: 960PX;
    min-width: 280px;
    max-height: 480px;
    min-height: 280px;
    
    width: 300px;
    height: 300px; /* Estas 2 propiedades tienen mayor geranquia que las de arriba */
}

.box-flexible-4{
    max-width: 960PX;
    min-width: 280px;
    max-height: 480px;
    min-height: 280px;

    width: 50%;
    height: 20vh;
}

img, video, iframe{
    max-width: 100%;
    height: auto;
}

.responsive-media{
    position: relative;
    max-width: 100%;
    height: 0;
    /* 
        Formato widescreen 16:9
        16 -----> 100%
        9  -----> 56.25%
     */
    padding-bottom: 56.25%;
}

.responsive-media > *{
    position: absolute;
    width: 100%;
    height: 100%;
}

.aspect-ratio-16-9{
    background-color: rebeccapurple;
    aspect-ratio: 16/9;
}

.aspect-ratio-1-1{
    aspect-ratio: 1/1;
}

@media screen and (prefers-reduced-motion: no-preference) { /* Si el usuario no prefiere las animaciones del scroll */
    html {
        scroll-behavior: smooth;
    }
}

@media screen and (prefers-color-scheme: dark){ /* Si el usuario usa el modo oscuro | claro */
    html{
        background-color: #000;
        color:greenyellow;
    }
}

/* Mobile First min-width */
@media screen and (min-width: 480px) {
    html{
        background-color: lightgreen;
        background-color: #fff;
    }
}

/* Desktop First max-width */
@media screen and (max-width: 1024px) {
    html{
        background-color: rgb(238, 144, 210);
        background-color: #fff;
    }
}

/* Aplica cuando el navegador Soporta cierta propiedad */
@supports (grid-template-columns:subgrid){
    html{
        background-color: #000;
        color: goldenrod;
    }
}

@supports not (grid-template-columns:subgrid){
    html{
        background-color: cyan;
        color: gray;
    }
}

@supports (display: grid) and (grid-template-columns: subgrid){
    html{
        background-color: darkslateblue;
        color: lightseagreen;
    }
}

@supports (display: grid) or (grid-template-columns: subgrid){
    html{
        background-color: darkslateblue;
        color: lightseagreen;

        background-color: white;
        color: black;
    }
}

.card{
    border: thin solid #000;
    margin-left: auto;
    margin-right: auto;
    max-width: 800px;

/* Para que esta Mediaquery funcione se debe escribir esto en el elemento padre */
    contain: layout inline-size style;
}

.card-image{
    max-width: 100%;
    height: auto;
    object-fit: cover;
    object-position: 0 50%;
}

.card-content{
    padding: 1rem;
}

/* Trabaja en base a las propiedades de los componentes */
@container(min-width: 600px){
    .card-container{
        display: flex;  
    }

    .card-content > *{
        width: 50%;
        flex-basis:50%;
    }
}

.fluid-grid{
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); 
}

.fluid-item {
    border: thin solid gray;
    padding: 1rem;
}

/* @link https://utopia.fyi/type/calculator?c=320,18,1.2,1240,20,1.25,5,2,&s=0.75|0.5|0.25,1.5|2|3|4|6,s-l&g=s,l,xl,12 */

:root {
    /* Step -2: 12.5px → 12.8px */
    --step--2: clamp(0.7813rem, 0.7747rem + 0.0326vi, 0.8rem);
    /* Step -1: 15px → 16px */
    --step--1: clamp(0.9375rem, 0.9158rem + 0.1087vi, 1rem);
    /* Step 0: 18px → 20px */
    --step-0: clamp(1.125rem, 1.0815rem + 0.2174vi, 1.25rem);
    /* Step 1: 21.6px → 25px */
    --step-1: clamp(1.35rem, 1.2761rem + 0.3696vi, 1.5625rem);
    /* Step 2: 25.92px → 31.25px */
    --step-2: clamp(1.62rem, 1.5041rem + 0.5793vi, 1.9531rem);
    /* Step 3: 31.104px → 39.0625px */
    --step-3: clamp(1.944rem, 1.771rem + 0.8651vi, 2.4414rem);
    /* Step 4: 37.3248px → 48.8281px */
    --step-4: clamp(2.3328rem, 2.0827rem + 1.2504vi, 3.0518rem);
    /* Step 5: 44.7898px → 61.0352px */
    --step-5: clamp(2.7994rem, 2.4462rem + 1.7658vi, 3.8147rem);
  }

  .step--2{
    font-size: var(--step--2);
  }
  .step--1{
    font-size: var(--step--1);
  }
  .step-0{
    font-size: var(--step-0);
  }
  .step-1{
    font-size: var(--step-1);
  }
  .step-2{
    font-size: var(--step-2);
  }
  .step-3{
    font-size: var(--step-3);
  }
  .step-4{
    font-size: var(--step-4);
  }
  .step-5{
    font-size: var(--step-5);
  }
  
  body{
    /* 
        14 = tamaño de letra mas pequeño
        18 = tamaño de letra mas grande 
        300 = tamaño del viewport mas pequeño 
        1400 = tamaño del viewport mas grande
     */
    font-size: calc(14px + (18 - 14) * ((100vw - 300px) / (1400 - 300)));
  }

  .box-fluid{
    width: clamp(400px, 60vw, 600px);/*  Permite limitar un valor dentro de un rango establecido, tomando tres parámetros: un valor mínimo, un valor preferido y un valor máximo */
    height: clamp(100px, 30vh, 300px);
  }