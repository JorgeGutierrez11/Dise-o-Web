html {
    box-sizing: border-box;
    font-family: sans-serif;
    font-size: 16px;
    overflow-x: hidden;
}

*, *::after, *::before{
    box-sizing: inherit;
}

h3 {
    text-align: center;
}

.box {
    border: thick solid #000;
    width: 200px;
    height: 200px;
    margin-left: auto;
    margin-right: auto;
    margin-bottom: 4rem;
}
.card{
    border: thick solid #000;
    width: 600px;
    height: 400px;
    margin-left: auto;
    margin-right: auto;
    margin-bottom: 4rem;
}

.card img{
    width: 100%;
    height: 100%;
    object-fit: cover;
    object-position: top left;
}

/* 
-- TRANSICIONES
    transition-property
    transition-duration
    transition-timing-funtion: none linear ease ease-in ease-out ease-in-out steps
    transition-delay
    transition: property duration timing-funtion delay
 */
.transitions .box{
    background-color: magenta;
    
    transition-property: background-color; /* Propiedad a la que se le va a aplicar la transicion */
    transition-duration: 500ms; /* Tiempo de la transicion */
    transition-timing-function: ease; /* Controla la aceleración o desaceleración de la transición */
    transition-delay: 500ms; /* Retardo de la transición (tanto inicion como final) */

    transition: border-color 2s linear 1s; /* Para una propiedad en especifico */ 

    transition: all 1s ease .5s; /* Para todas las propiedad animables al mismo tiempo */
}

.transitions .box:hover{
    background-color: cyan;
    border-color: red;
    border-radius: 2rem;
}

.transitions .card{
    /* Transiciones para cada prodiedad de forma multiple */
    transition: opacity 2s ease-out, border-color 3s steps(3), 
    filter 2s ease-in 1s, box-shadow 1.5s linear 2s;
}

.transitions .card:hover{
    opacity: .75;
    border-color: orchid;
    filter: blur(.15rem);
    box-shadow: 1rem 1rem 2rem .5rem #000;
}

.transitions .card img{
    transition: object-position 2s ease-in-out 3s;
}

.transitions .card img:hover{
    object-position: 100% 50%;
}

.tranform-2d img{
    transition: transform 2s ease-in;
}  

.tranform-2d img:hover{
    transform: none; 
    transform: translateX(4rem);
    transform: translateY(-4rem);
    transform: translate(-4rem, 4rem); /* Puedo usar porcentaje y este se basara en el tamaño de la imagen */ 

    transform: scaleX(1.5);
    transform: scaleY(2);
    transform: scale(.5); /* Aplica a los 2 ejes el mismo valor */
    transform: scale(.5, -2); /* Aplica a los 2 ejes de manera individual */

    transform: rotateX(45deg);
    transform: rotatey(80deg);
    transform: rotateZ(90deg);
    transform: rotate(-360deg);

    transform: skewX(-20deg); /* Sesgar */
    transform: skewY(45deg); 
    transform: skew(20deg, 20deg); 

    /* matrix(scaleX(), skewY(), skewX(), scaleY(), translateX(), traslateY()), escala a valores enteros */
    transform: matrix(1.2, 0.2, -1, 0.9, 0, 20);

    transform: translate(-4rem) rotate(-360deg) skew(10deg, 5deg) scale(-.5);
}  

.tranform-3d{
    perspective: 100rem;
}

.tranform-3d img{
    transition: transform 2s ease;
}

.tranform-3d img:hover{
    transform: perspective(10rem) translateZ(-4rem);
    transform: translate3d(2rem, 50%, -3rem);

    transform: rotateX(60deg);
    transform: rotateY(-60deg);
    transform: rotate3d(2, -0.01, -.5, 45deg);

    transform: matrix3d(
    0.5,        0,      -0.866025, 0,
    0.595877,   1.2,    -1.03209,  0,
    0.866025,   0,       0.5,      0,
    25.9808,     0,      15,        1);

    transform: rotate3d(-1,2.5,-2,60deg) translate3d(2rem, 50%, -3rem);
}

.tranform-origin img{
    transition: transform 2s ease-in-out;

    transform-origin: 0 0;
    transform-origin: top right;
    transform-origin: 0 50%;
}

.tranform-origin img:hover{
    transform: rotate(360deg);
}

.flip-card{
    border: thick solid #000;
    width: 600px;
    height: 400px;
    margin-left: auto;
    margin-right: auto;
    margin-bottom: 4rem;

    position: relative;
    cursor: pointer;

    transition: transform 1s ease-in-out;
    perspective: 100rem;
    transform-style: preserve-3d; /* Como se comportan los hijos en 3D (flat, preserve-3d)*/
}

.flip-card:hover{
    transform: rotateY(180deg);
}

.flip-card img{
    width: 100%;
    height: 100%;
    object-fit: cover;
    object-position: top left;
}

.flip-face{
    position: absolute;
    width: 100%;
    height: 100%;

    backface-visibility: hidden;
}

.flip-front{
    transform: rotateY(0deg);
}

.flip-back{
    transform: rotateY(180deg);
}

@keyframes myAwesomeAnimation {
    from {
        opacity: 0;
        filter: blur(.2rem);
        transform: translateX(0%);
    }
    
    to {
        opacity: 1;
        transform: translateX(80%);

    }
}

.my-animation:hover{
    /* animation: name duration timing-function delay iteration-count direction fill-mode; */    
    animation-name: myAwesomeAnimation;
    animation-duration: 2s;

    animation-timing-function: cubic-bezier(1,1.75,0,-0.43); /* Función de aceleració */
    animation-timing-function: ease-in-out;
    
    animation-delay: .5s; /* Retraso para iniciar la animación */
    animation-iteration-count: 1; /* Veces que se repite la animación */
    animation-direction: normal; /* Direccion de los frames (normal, reverse, alternate, alternate-reverse)*/

    animation-fill-mode: none;
    animation-fill-mode: forwards; /* Conserva los estilos finales de la animación */
    animation-fill-mode: backwards; /* Aplica los estilos al inicio de la animación */
    animation-fill-mode: both; /* Aplica las 2 propiedades anteriores de forma simultanea */

    animation: myAwesomeAnimation 2s ease 1s 5 alternate both;
}

@keyframes myAwesomeAnimation2 {
    0%{
        filter: blur(0.3rem);
    }
    25%{
        filter: blur(0.2rem);
        transform: rotate(-360deg) skew(10deg, 5deg) scale(-.5);
    }
    50%{
        filter: blur(0.1rem);
        transform: translateX(-50%) rotateX(70deg);        
    }
    75%{
        filter: blur(0rem);
        transform: rotateY(90deg);
    }
    100%{
        transform: rotate(180deg);
    }
}

.my-animation-2{
    animation: myAwesomeAnimation2 5s ease-in-out 2s 3 alternate both;
}

.motion-examples div{
    text-align: center;
    font-size: 6vw;
}

@keyframes fadeIn {
    0%{
        opacity: 0;
    }
    100%{
        opacity: 1;
    }
}

.fade-in{
    animation: fadeIn 2s linear infinite alternate;
}

@keyframes fadeOut {
    0%{
        opacity: 1;
    }
    100%{
        opacity: 0;
    }
}

.fade-out{
    animation: fadeOut 2s linear infinite alternate;
}

@keyframes shake{
    10%, 90%{
        transform: translate(-1px, 0);
    }

    20%, 80%{
        transform: translate(2px, 0);
    }

    30%, 50%, 70%{
        transform: translate(-4px, 0);
    }

    40%, 60%{
        transform: translate(4px, 0);
    }
}

.shake{
    cursor: pointer;
    display: inline-block;
    margin-left: 46%;
}

.shake:hover{
    animation: shake 2s cubic-bezier(.36,.07,.19,.97);
    transform: translate(0,0);
}

@keyframes pulse {
    0%{
        transform: scale(1.1);
    }
    50%{
        transform: scale(.99);
    }
    100%{
        transform: scale(1);
    }
}

.pulse{
    animation: pulse 1s linear infinite;
}

.heart{
    position: relative;
    margin: auto;
    width: 10vw;
    height: 10vw;
    animation: pulse 1s infinite;
}

.heart::after, .heart::before{
    position: absolute;
    content: "";
    left: 5vw;
    top: 0;
    width: 5vw;
    height: 8vw;
    background-color: #a00;
    transform: rotate(-45deg);
    transform-origin: 0 100%;
    border-radius: 5vw 5vw 0 0;
}

.heart::after{
    left: 0;
    transform: rotate(45deg);
    transform-origin: 100% 100%;
}

@keyframes spinner {
    0%{
        transform: rotate(0deg);
    }
    100%{
        transform: rotate(360deg);
    }
}

.spinner{
    width: 5vw;
    height: 5vw;
    margin: auto;
    border-radius: 50%;
    border: .5vw solid rgba(0, 0, 0, .1);
    border-left-color: #09f;
    animation: spinner 1s ease-in-out infinite;
}

.btn{
    position: relative;
    margin: 3vw;
    border: none;
    border-radius: .25rem;
    padding: .2rem;
    width: 15rem;
    height: 2.5rem;
    font-size: 1.25rem;
    font-weight: bold;
    cursor: pointer;
    overflow: hidden;
    box-shadow: .25rem .25rem .5rem .25rem rgba(0, 0, 0, .1);
}

.anim-bottom::after{
    content: "";
    position: absolute;
    bottom: 0;
    width: 0;
    height: .25rem; /* 10% de la altura original */
    background-color: #d00;

    transition: width .5s ease, left .5s ease, right .5s ease;
}

.anim-bottom:hover::after{
    width: 100%;
}

.to-left::after{
    left: 0;
}

.to-center::after{
    left: 50%;
}

.to-center:hover::after{
    left: 0;
}

.to-right::after{
    right: 0;
}

.anim-bg-gradient{
    background-image: linear-gradient(to right,pink,violet, orange, orangered);
    background-size: 300% 100%;
    transition: background-position 1s ease-in-out;
}

.anim-bg-gradient:hover{
    background-position: 100% 0;
}

.tabs-menu{
    position: relative;
    padding: 1rem;
    border-radius: 1rem;
    width: 70%;
    height: 3rem;

    display: flex;
    justify-content: space-between;
    align-items: center;

    background-color: #ddd;
}

.tabs-menu input[type="radio"]{
    display: none;
}

.tabs-menu label{
    position: relative;
    z-index: 1;
    width: calc(100% / 4 - .5rem);
    text-align: center;
    cursor: pointer;
}

.tabs-menu label:hover{
    color: #aff;
}

.tabs-menu input[type ="radio"]:checked + label{ /* Cuando el imput este seleccionado aplique estilo a la etiqueta hermana */
    color: #fff;
}

.tab-bg-hover{
    position: absolute;
    width: calc(100% / 4 - .5rem);
    height: 2rem;
    border-radius: .5rem;
    background-image: linear-gradient(90deg, #a00, #d00);
    transition: transform 300ms ease-in-out;
}

#tab-1:checked ~ .tab-bg-hover{ /* " ~ ", es el selector de hermanos en general  */
    transform: translateX(0);
} 

#tab-2:checked ~ .tab-bg-hover{ 
    transform: translateX(100%);
} 

#tab-3:checked ~ .tab-bg-hover{ 
    transform: translateX(200%);
} 

#tab-4:checked ~ .tab-bg-hover{ 
    transform: translateX(300%);
} 

.off-canvas-btn{
    position: fixed;
    bottom: 1rem;
    right: 1rem;
    z-index: 3;
    width: 3rem;
    height: 3rem;
    cursor: pointer;
    opacity: 0;
}

.off-canvas-burger{
    position: fixed;
    bottom: 1rem;
    right: 1rem;
    z-index: 2;
    width: 3rem;
    height: .6rem;
    background-color: #000;
    border-radius: .3rem;

    transform: rotate(0deg) translate(0, -1.2rem);
    transform-origin: top left;
    transition: transform .5s ease, background-color 500ms ease;
}

.off-canvas-burger::before, .off-canvas-burger::after{
    content: "";
    display: block;
    width: 100%;
    height: .6rem;
    background-color: #000;
    border-radius: .3rem;
    transition: transform .5s ease;
}

.off-canvas-burger::before{
    transform: rotate(0) translate(0, -.9rem);
}

.off-canvas-burger::after{
    transform: rotate(0) translate(0, .3rem);
}

.off-canvas-btn:checked + .off-canvas-burger{
    background-color: transparent;
}

.off-canvas-btn:checked + .off-canvas-burger::before{
    transform: rotate(45deg);
}

.off-canvas-btn:checked + .off-canvas-burger::after{
    transform: rotate(-45deg) translate(.4rem ,-.5rem);
}

.off-canvas-menu{
    display: flex;
    justify-content: center;
    align-items: center;
    position: fixed;
    top: 0;
    left: 0;
    bottom: 0;
    right: 0;
    z-index: 1;
    background-color: #0008;

    transform: translate(-100%,0);
    transition: transform 500ms ease-in-out;
}

.off-canvas-btn:checked ~ .off-canvas-menu{
    transform: translate(0,0);
}

.off-canvas-menu-container{
    display: flex;
    flex-direction: column;
    justify-content: center;
    width: 100%;
    height: 100vh;
}

.off-canvas-link{
    padding: 2rem;
    border-bottom: thin solid #000;
    font-size: 1.5rem;
    text-align: center;
    text-decoration: none;
    color: #fff;
    transition: background-color 300ms ease;
}

.off-canvas-link:first-child{
    border-top: thin solid #000;
}

.off-canvas-link:hover{
    background-color: rgba(0, 0, 0, .5);
}

.modal{
    display: flex;
    justify-content: center;
    align-items: center;
    text-align: center;
    position: fixed;
    top: 0;
    left: 0;
    bottom: 0;
    right: 0;
    z-index: 1;
    background-color: #0008;

    opacity: 0;
    pointer-events: none;

    transition: opacity 500ms ease-in-out;
}

.modal:target{
    opacity: 1;
    pointer-events: auto;
}

.modal-container{
    position: relative;
    border: thick double #aaa;
    border-radius: 2rem;
    padding: 2rem;
    width: 70%;
    height: 70%;
    display: flex;
    flex-direction: column;
    text-align: left;
    overflow: hidden;
    background-color: #fff;
}

.Modal-close{
    position: absolute;
    top: 1rem;
    right: 1rem;
    width: 3rem;
    height: 3rem;
    font-size: 2rem;
    font-weight: bold;
    text-align: center;
    text-decoration: none;
    line-height: 3rem;
    border-radius: 50%;
    color: #fff;
    background-color: #d00;
    transition: background-color 300ms linear, transform 300ms ease-in-out;
}

.Modal-close:hover{
    background-color: #a00;
    transform: scale(1.2);
}